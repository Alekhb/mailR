{"name":"Mailr","tagline":"A utility to send emails from the R programming environment","body":"Overview\r\n========\r\nmailR allows users to send emails from within R via an accessible SMTP server.\r\n\r\nIt is developed as a wrapper around [Apache Commons Email](http://commons.apache.org/proper/commons-email/) and offers a majority of the project's functionality. mailR offers several additional features in contrast to other similar R packages, namely [mail](http://cran.r-project.org/web/packages/mail/) and [sendmail](http://cran.r-project.org/web/packages/sendmailR/). It allows users to:\r\n- use authentication-based SMTP servers\r\n- send emails to multiple recipients (including the use of Cc and Bcc)\r\n- attach multiple files from the file system to the email.\r\n- send HTML formatted emails with inline images.\r\n\r\nWhat's new\r\n----------\r\n\r\n**12th May 2014**\r\n\r\n*Features*\r\n- Added support to encode emails using iso-8859-1, utf-8, us-ascii, and koi8-r character sets.\r\n- The body parameter can point to a locally stored text (or HTML) file and mailR will parse its contents to create the body of the email.\r\n\r\n*Bug fixes*\r\n- Experimental: changed called methods to set SSL/TLS to true to check whether it resolves issue that causes port number to default to 465.\r\n\r\n**20th April 2014**\r\n\r\n*Features*\r\n- mailR now allows sending email content as HTML including allowing for embedding images as inline (currently an experimental feature).\r\n- Email addresses conforming to RFC 2822 allowed, e.g., \"FirstName LastName \\<sender@domain.com\\>\" allowed.\r\n- A java stacktrace is printed out in case of failure when sending the email to allow better root cause analysis.\r\n\r\n*Bug fixes*\r\n- Fixed a bug that incorrectly set the TLS parameter as TRUE whenever the SSL parameter was set as TRUE.\r\n\r\nSample use cases\r\n=================\r\n\r\n1. Create a workflow to generate business/status reports and have them delivered to you by email using *an authorized SMTP server* (a critical requirement when dealing with sensitive data).\r\n\r\n2. Periodically send updates on the status of long-running R processes. This is especially helpful when process running on remote machines encounter an error.\r\n\r\n3. Keep your entire team on the same page on the progress of the R process by being able to deliver mails to multiple recipients.\r\n\r\nInstallation instructions\r\n=========================\r\nYou can install the latest development version of mailR using devtools:\r\n\r\n```R\r\ninstall.packages(\"devtools\", dep = T)\r\nlibrary(devtools)\r\ninstall_github(\"mailR\", \"rpremraj\")\r\n\r\nlibrary(mailR)\r\n```\r\n\r\nThe latest release of mailR is available on [CRAN](http://cran.r-project.org/web/packages/mailR/):\r\n\r\n```R\r\ninstall.packages(\"mailR\", dep = T)\r\n\r\nlibrary(mailR)\r\n```\r\n\r\nUsage\r\n=====\r\nTo send an email via a SMTP server that does not require authentication:\r\n\r\n```R\r\nsend.mail(from = \"sender@gmail.com\",\r\n          to = c(\"Recipient 1 <recipient1@gmail.com>\", \"recipient2@gmail.com\"),\r\n          cc = c(\"CC Recipient <cc.recipient@gmail.com>\"),\r\n          bcc = c(\"BCC Recipient <bcc.recipient@gmail.com>\"),\r\n          subject=\"Subject of the email\",\r\n          body = \"Body of the email\",\r\n          smtp = list(host.name = \"aspmx.l.google.com\", port = 25),\r\n          authenticate = FALSE,\r\n          send = TRUE)\r\n```\r\n*Note that the SMTP server aspmx.l.google.com only works for gmail recipients. Do check your gmail spam folder in case you are testing using this SMTP server.*\r\n\r\nTo send an email via a SMTP server that requires authentication:\r\n\r\n```R\r\nsend.mail(from = \"sender@gmail.com\",\r\n          to = c(\"recipient1@gmail.com\", \"recipient2@gmail.com\"),\r\n          subject = \"Subject of the email\",\r\n          body = \"Body of the email\",\r\n          smtp = list(host.name = \"smtp.gmail.com\", port = 465, user.name = \"gmail_username\", passwd = \"password\", ssl = TRUE),\r\n          authenticate = TRUE,\r\n          send = TRUE)\r\n```\r\n\r\nTo send an email with utf-8 or other encoding:\r\n\r\n```R\r\nemail <- send.mail(from = \"Sender Name <sender@gmail.com>\",\r\n                   to = \"recipient@gmail.com\",\r\n                   subject = \"A quote from Gandhi\",\r\n                   body = \"In Hindi :  थोडा सा अभ्यास बहुत सारे उपदेशों से बेहतर है।\r\n                   English translation: An ounce of practice is worth more than tons of preaching.\",\r\n                   encoding = \"utf-8\",\r\n                   smtp = list(host.name = \"smtp.gmail.com\", port = 465, user.name = \"gmail_username\", passwd = \"password\", ssl = T),\r\n  \t\t\t   authenticate = TRUE,\r\n\t\t\t\t   send = TRUE)\r\n```           \r\n           \r\nTo send an email with one or more file attachments:\r\n\r\n```R\r\nsend.mail(from = \"sender@gmail.com\",\r\n          to = c(\"recipient1@gmail.com\", \"recipient2@gmail.com\"),\r\n          subject = \"Subject of the email\",\r\n          body = \"Body of the email\",\r\n          smtp = list(host.name = \"smtp.gmail.com\", port = 465, user.name = \"gmail_username\", passwd = \"password\", ssl = TRUE),\r\n          authenticate = TRUE,\r\n          send = TRUE,\r\n          attach.files = c(\"./download.log\", \"upload.log\"),\r\n          file.names = c(\"Download log\", \"Upload log\"), # optional parameter\r\n          file.descriptions = c(\"Description for download log\", \"Description for upload log\"))\r\n```\r\n\r\nTo send a HTML formatted email:\r\n\r\n```R\r\nsend.mail(from = \"sender@gmail.com\",\r\n          to = c(\"recipient1@gmail.com\", \"recipient2@gmail.com\"),\r\n          subject = \"Subject of the email\",\r\n          body = \"<html>The apache logo - <img src=\\\"http://www.apache.org/images/asf_logo_wide.gif\\\"></html>\", # can also point to local file (see next example)\r\n          html = TRUE,\r\n          smtp = list(host.name = \"smtp.gmail.com\", port = 465, user.name = \"gmail_username\", passwd = \"password\", ssl = TRUE),\r\n          authenticate = TRUE,\r\n          send = TRUE)\r\n```\r\n\r\nTo send a HTML formatted email with embedded inline images:\r\n\r\n```R\r\nsend.mail(from = \"sender@gmail.com\",\r\n          to = c(\"recipient1@gmail.com\", \"recipient2@gmail.com\"),\r\n          subject = \"Subject of the email\",\r\n          body = \"path.to.local.html.file\",\r\n          html = TRUE,\r\n          inline = TRUE,\r\n          smtp = list(host.name = \"smtp.gmail.com\", port = 465, user.name = \"gmail_username\", passwd = \"password\", ssl = TRUE),\r\n          authenticate = TRUE,\r\n          send = TRUE)\r\n```\r\n*send.mail expects the images in the HTML file to be referenced relative to the current working directory (something to improve upon in the future).*\r\n\r\nMS Exchange server\r\n==================\r\nI do not have access to an exchange server, so I cannot test mailR against it. Would be great to get a short note if you could successfully use mailR via MS Exchange. Thanks! \r\n\r\n\r\nIssues/Contibutions\r\n===================\r\nHappy to hear about any issues you encounter using mailR. Simply file a ticket on github or feel free to <A HREF=\"&#109;&#97;&#105;&#108;&#116;&#111;&#58;%72%2E%70%72%65%6D%72%61%6A%2B%6D%61%69%6C%52%40%67%6D%61%69%6C%2E%63%6F%6D\">email me</A>, or even send in a patch ;-)\r\n\r\nAlso, would be great to have collaborators to further extend the functionality of mailR.\r\n\r\n<script>\r\n  (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){\r\n  (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),\r\n  m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)\r\n  })(window,document,'script','//www.google-analytics.com/analytics.js','ga');\r\n\r\n  ga('create', 'UA-51353779-1', 'rpremraj.github.io');\r\n  ga('send', 'pageview');\r\n\r\n</script>","google":"UA-51353779-1","note":"Don't delete this file! It's used internally to help with page regeneration."}